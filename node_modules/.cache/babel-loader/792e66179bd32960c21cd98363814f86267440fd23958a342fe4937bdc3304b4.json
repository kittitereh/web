{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderSlot as _renderSlot, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, resolveDynamicComponent as _resolveDynamicComponent, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = [\"innerHTML\"];\nconst _hoisted_2 = {\n  class: \"vac-image-link-container\"\n};\nconst _hoisted_3 = {\n  class: \"vac-image-link-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_svg_icon = _resolveComponent(\"svg-icon\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"vac-format-message-wrapper\", {\n      'vac-text-ellipsis': $props.singleLine\n    }])\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.parsedMessage, (message, i) => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: i\n    }, [message.markdown ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      class: \"markdown\",\n      onClick: _cache[0] || (_cache[0] = (...args) => $options.openTag && $options.openTag(...args)),\n      innerHTML: message.value\n    }, null, 8 /* PROPS */, _hoisted_1)) : (_openBlock(), _createElementBlock(\"div\", {\n      key: 1,\n      class: _normalizeClass([\"vac-format-container\", {\n        'vac-text-ellipsis': $props.singleLine\n      }])\n    }, [(_openBlock(), _createBlock(_resolveDynamicComponent(message.url ? 'a' : 'span'), {\n      class: _normalizeClass({\n        'vac-text-ellipsis': $props.singleLine,\n        'vac-text-tag': !$props.singleLine && !$props.reply && message.tag\n      }),\n      href: message.href,\n      target: message.href ? $props.linkOptions.target : null,\n      rel: message.href ? $props.linkOptions.rel : null\n    }, {\n      default: _withCtx(() => [$props.deleted ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 0\n      }, [_renderSlot(_ctx.$slots, $props.roomList ? 'deleted-icon-room_' + $props.roomId : 'deleted-icon_' + $props.messageId, {}, () => [_createVNode(_component_svg_icon, {\n        name: \"deleted\",\n        class: _normalizeClass([\"vac-icon-deleted\", {\n          'vac-icon-deleted-room': $props.roomList\n        }])\n      }, null, 8 /* PROPS */, [\"class\"])]), _createTextVNode(\" \" + _toDisplayString($props.textMessages.MESSAGE_DELETED), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : message.url && message.image ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 1\n      }, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n        class: \"vac-image-link\",\n        style: _normalizeStyle({\n          'background-image': `url('${message.value}')`,\n          height: message.height\n        })\n      }, null, 4 /* STYLE */)]), _createElementVNode(\"div\", _hoisted_3, _toDisplayString(message.value), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n        key: 2\n      }, [_createTextVNode(_toDisplayString(message.value), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */))]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"class\", \"href\", \"target\", \"rel\"]))], 2 /* CLASS */))], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */))], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","_createElementBlock","_normalizeClass","$props","singleLine","_Fragment","_renderList","$options","parsedMessage","message","i","key","markdown","onClick","_cache","args","openTag","innerHTML","value","_hoisted_1","_createBlock","_resolveDynamicComponent","url","reply","tag","href","target","linkOptions","rel","default","_withCtx","deleted","_renderSlot","_ctx","$slots","roomList","roomId","messageId","_createVNode","_component_svg_icon","name","_createTextVNode","_toDisplayString","textMessages","MESSAGE_DELETED","image","_createElementVNode","_hoisted_2","style","_normalizeStyle","height","_hoisted_3","_"],"sources":["/home/kittitereh/Desktop/web-vue-project/src/views/Chats.vue"],"sourcesContent":["<template>\n\t<div\n\t\tclass=\"vac-format-message-wrapper\"\n\t\t:class=\"{ 'vac-text-ellipsis': singleLine }\"\n\t>\n\t\t<template v-for=\"(message, i) in parsedMessage\" :key=\"i\">\n\t\t\t<div\n\t\t\t\tv-if=\"message.markdown\"\n\t\t\t\tclass=\"markdown\"\n\t\t\t\t@click=\"openTag\"\n\t\t\t\tv-html=\"message.value\"\n\t\t\t/>\n\t\t\t<div\n\t\t\t\tv-else\n\t\t\t\tclass=\"vac-format-container\"\n\t\t\t\t:class=\"{ 'vac-text-ellipsis': singleLine }\"\n\t\t\t>\n\t\t\t\t<component\n\t\t\t\t\t:is=\"message.url ? 'a' : 'span'\"\n\t\t\t\t\t:class=\"{\n\t\t\t\t\t\t'vac-text-ellipsis': singleLine,\n\t\t\t\t\t\t'vac-text-tag': !singleLine && !reply && message.tag\n\t\t\t\t\t}\"\n\t\t\t\t\t:href=\"message.href\"\n\t\t\t\t\t:target=\"message.href ? linkOptions.target : null\"\n\t\t\t\t\t:rel=\"message.href ? linkOptions.rel : null\"\n\t\t\t\t>\n\t\t\t\t\t<template v-if=\"deleted\">\n\t\t\t\t\t\t<slot\n\t\t\t\t\t\t\t:name=\"\n\t\t\t\t\t\t\t\troomList\n\t\t\t\t\t\t\t\t\t? 'deleted-icon-room_' + roomId\n\t\t\t\t\t\t\t\t\t: 'deleted-icon_' + messageId\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<svg-icon\n\t\t\t\t\t\t\t\tname=\"deleted\"\n\t\t\t\t\t\t\t\tclass=\"vac-icon-deleted\"\n\t\t\t\t\t\t\t\t:class=\"{ 'vac-icon-deleted-room': roomList }\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</slot>\n\t\t\t\t\t\t{{ textMessages.MESSAGE_DELETED }}\n\t\t\t\t\t</template>\n\t\t\t\t\t<template v-else-if=\"message.url && message.image\">\n\t\t\t\t\t\t<div class=\"vac-image-link-container\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\"vac-image-link\"\n\t\t\t\t\t\t\t\t:style=\"{\n\t\t\t\t\t\t\t\t\t'background-image': `url('${message.value}')`,\n\t\t\t\t\t\t\t\t\theight: message.height\n\t\t\t\t\t\t\t\t}\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"vac-image-link-message\">\n\t\t\t\t\t\t\t{{ message.value }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template v-else>\n\t\t\t\t\t\t{{ message.value }}\n\t\t\t\t\t</template>\n\t\t\t\t</component>\n\t\t\t</div>\n\t\t</template>\n\t</div>\n</template>\n\n<script>\nimport SvgIcon from '../SvgIcon/SvgIcon'\n\nimport markdown from '../../utils/markdown'\nimport { IMAGE_TYPES } from '../../utils/constants'\n\nexport default {\n\tname: 'FormatMessage',\n\tcomponents: { SvgIcon },\n\n\tprops: {\n\t\tmessageId: { type: String, default: '' },\n\t\troomId: { type: String, default: '' },\n\t\troomList: { type: Boolean, default: false },\n\t\tcontent: { type: [String, Number], required: true },\n\t\tdeleted: { type: Boolean, default: false },\n\t\tusers: { type: Array, default: () => [] },\n\t\tlinkify: { type: Boolean, default: true },\n\t\tsingleLine: { type: Boolean, default: false },\n\t\treply: { type: Boolean, default: false },\n\t\ttextFormatting: { type: Object, required: true },\n\t\ttextMessages: { type: Object, default: () => {} },\n\t\tlinkOptions: { type: Object, required: true }\n\t},\n\n\temits: ['open-user-tag'],\n\n\tcomputed: {\n\t\tparsedMessage() {\n\t\t\tif (this.deleted) {\n\t\t\t\treturn [{ value: this.textMessages.MESSAGE_DELETED }]\n\t\t\t}\n\n\t\t\tlet options\n\t\t\tif (!this.textFormatting.disabled) {\n\t\t\t\toptions = {\n\t\t\t\t\ttextFormatting: {\n\t\t\t\t\t\tlinkify: this.linkify,\n\t\t\t\t\t\tlinkOptions: this.linkOptions,\n\t\t\t\t\t\tsingleLine: this.singleLine,\n\t\t\t\t\t\treply: this.reply,\n\t\t\t\t\t\tusers: this.users,\n\t\t\t\t\t\t...this.textFormatting\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toptions = {}\n\t\t\t}\n\n\t\t\tconst message = markdown(this.content, options)\n\n\t\t\tmessage.forEach(m => {\n\t\t\t\tm.markdown = this.checkType(m, 'markdown')\n\t\t\t\tm.tag = this.checkType(m, 'tag')\n\t\t\t\tm.image = this.checkImageType(m)\n\t\t\t})\n\n\t\t\treturn message\n\t\t}\n\t},\n\n\tmethods: {\n\t\tcheckType(message, type) {\n\t\t\treturn message.types && message.types.indexOf(type) !== -1\n\t\t},\n\t\tcheckImageType(message) {\n\t\t\tlet index = message.value.lastIndexOf('.')\n\t\t\tconst slashIndex = message.value.lastIndexOf('/')\n\t\t\tif (slashIndex > index) index = -1\n\n\t\t\tconst type = message.value.substring(index + 1, message.value.length)\n\n\t\t\tconst isMedia =\n\t\t\t\tindex > 0 && IMAGE_TYPES.some(t => type.toLowerCase().includes(t))\n\n\t\t\tif (isMedia) this.setImageSize(message)\n\n\t\t\treturn isMedia\n\t\t},\n\t\tsetImageSize(message) {\n\t\t\tconst image = new Image()\n\t\t\timage.src = message.value\n\n\t\t\timage.addEventListener('load', onLoad)\n\n\t\t\tfunction onLoad(img) {\n\t\t\t\tconst ratio = img.path[0].width / 150\n\t\t\t\tmessage.height = Math.round(img.path[0].height / ratio) + 'px'\n\t\t\t\timage.removeEventListener('load', onLoad)\n\t\t\t}\n\t\t},\n\t\topenTag(event) {\n\t\t\tconst userId = event.target.getAttribute('data-user-id')\n\t\t\tif (!this.singleLine && userId) {\n\t\t\t\tconst user = this.users.find(u => String(u._id) === userId)\n\t\t\t\tthis.$emit('open-user-tag', user)\n\t\t\t}\n\t\t}\n\t}\n}\n</script>"],"mappings":";mBAAA;;EA4CWA,KAAK,EAAC;AAA0B;;EAShCA,KAAK,EAAC;AAAwB;;;uBApDxCC,mBAAA,CA8DM;IA7DLD,KAAK,EAFPE,eAAA,EAEQ,4BAA4B;MAAA,qBACHC,MAAA,CAAAC;IAAU;yBAEzCH,mBAAA,CAyDWI,SAAA,QA9DbC,WAAA,CAKmCC,QAAA,CAAAC,aAAa,EALhD,CAKoBC,OAAO,EAAEC,CAAC;yBAL9BT,mBAAA,CAAAI,SAAA;MAAAM,GAAA,EAKwDD;IAAC,IAE/CD,OAAO,CAACG,QAAQ,I,cADvBX,mBAAA,CAKE;MAXLU,GAAA;MAQIX,KAAK,EAAC,UAAU;MACfa,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAER,QAAA,CAAAS,OAAA,IAAAT,QAAA,CAAAS,OAAA,IAAAD,IAAA,CAAO;MACfE,SAAsB,EAAdR,OAAO,CAACS;4BAVpBC,UAAA,M,cAYGlB,mBAAA,CAiDM;MA7DTU,GAAA;MAcIX,KAAK,EAdTE,eAAA,EAcU,sBAAsB;QAAA,qBACGC,MAAA,CAAAC;MAAU;uBAEzCgB,YAAA,CA2CYC,wBA5DhB,CAkBUZ,OAAO,CAACa,GAAG;MACftB,KAAK,EAnBXE,eAAA;6BAmB0CC,MAAA,CAAAC,UAAU;yBAAyBD,MAAA,CAAAC,UAAU,KAAKD,MAAA,CAAAoB,KAAK,IAAId,OAAO,CAACe;;MAIvGC,IAAI,EAAEhB,OAAO,CAACgB,IAAI;MAClBC,MAAM,EAAEjB,OAAO,CAACgB,IAAI,GAAGtB,MAAA,CAAAwB,WAAW,CAACD,MAAM;MACzCE,GAAG,EAAEnB,OAAO,CAACgB,IAAI,GAAGtB,MAAA,CAAAwB,WAAW,CAACC,GAAG;;MAzBzCC,OAAA,EAAAC,QAAA,CA2BK,MAeW,CAfK3B,MAAA,CAAA4B,OAAO,I,cAAvB9B,mBAAA,CAeWI,SAAA;QA1ChBM,GAAA;MAAA,IA4BMqB,WAAA,CAYOC,IAAA,CAAAC,MAAA,EAXU/B,MAAA,CAAAgC,QAAQ,G,uBAAmChC,MAAA,CAAAiC,MAAM,G,kBAA8BjC,MAAA,CAAAkC,SAAS,E,IADzG,MAYO,CALNC,YAAA,CAIEC,mBAAA;QAHDC,IAAI,EAAC,SAAS;QACdxC,KAAK,EArCbE,eAAA,EAqCc,kBAAkB;UAAA,yBACWC,MAAA,CAAAgC;QAAQ;4CAtCnDM,gBAAA,CAwCa,GACP,GAAAC,gBAAA,CAAGvC,MAAA,CAAAwC,YAAY,CAACC,eAAe,iB,+BAEXnC,OAAO,CAACa,GAAG,IAAIb,OAAO,CAACoC,KAAK,I,cAAjD5C,mBAAA,CAaWI,SAAA;QAxDhBM,GAAA;MAAA,IA4CMmC,mBAAA,CAQM,OARNC,UAQM,GAPLD,mBAAA,CAME;QALD9C,KAAK,EAAC,gBAAgB;QACrBgD,KAAK,EA/CdC,eAAA;sCA+CuDxC,OAAO,CAACS,KAAK;kBAAuBT,OAAO,CAACyC;;iCAM7FJ,mBAAA,CAEM,OAFNK,UAEM,EAAAT,gBAAA,CADFjC,OAAO,CAACS,KAAK,iB,8CAGlBjB,mBAAA,CAEWI,SAAA;QA3DhBM,GAAA;MAAA,IAAA8B,gBAAA,CAAAC,gBAAA,CA0DSjC,OAAO,CAACS,KAAK,iB;MA1DtBkC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}