{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p><p>a</p>\", 34);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavigationBar = _resolveComponent(\"NavigationBar\");\n  const _component_SearchBar = _resolveComponent(\"SearchBar\");\n  const _component_LoginPopup = _resolveComponent(\"LoginPopup\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_NavigationBar), _createVNode(_component_SearchBar), $data.showLoginPopup ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_LoginPopup, {\n    onClose: $options.toggleLoginPopup\n  }, null, 8 /* PROPS */, [\"onClose\"])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleLoginPopup && $options.toggleLoginPopup(...args))\n  }, \"Write\"), _hoisted_2], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["key","_createStaticVNode","_createElementBlock","_Fragment","_createVNode","_component_NavigationBar","_component_SearchBar","$data","showLoginPopup","_hoisted_1","_component_LoginPopup","onClose","$options","toggleLoginPopup","_createCommentVNode","_createElementVNode","onClick","_cache","args","_hoisted_2"],"sources":["/home/kittitereh/Desktop/web-vue-project/src/App.vue"],"sourcesContent":["<template>\n    <NavigationBar />\n    <SearchBar/>\n    <div v-if=\"showLoginPopup\"> \n      <LoginPopup @close=\"toggleLoginPopup\"/>\n    </div>\n    <button @click=\"toggleLoginPopup\">Write</button>\n    <p>a</p>\n    <p>a</p>\n\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n\n\n\n\n\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n    <p>a</p>\n</template>\n\n<script>\nimport LoginPopup from \"./components/LoginPopup.vue\"\nimport SearchBar from \"./components/SearchBar.vue\"\nimport CreateAccountPopup from \"./components/CreateAccountPopup.vue\"\nimport NavigationBar from \"./components/NavigationBar.vue\"\n\nexport default {\n  name: 'App',\n  components: {LoginPopup, SearchBar, CreateAccountPopup, NavigationBar},\n  data(){\n    return{\n    showLoginPopup: false,\n    showSignupPopup: false\n  }\n  },\n  methods:{\n    toggleLoginPopup(){\n      this.showLoginPopup = !this.showLoginPopup\n  },\n    toggleSignupPopup(){\n      this.showLoginPopup = !this.showLoginPopup\n  }\n  }}\n\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n\n</style>\n"],"mappings":";;EAAAA,GAAA;AAAA;gCAAAC,kBAAA;;;;;uBAAAC,mBAAA,CAAAC,SAAA,SACIC,YAAA,CAAiBC,wBAAA,GACjBD,YAAA,CAAYE,oBAAA,GACDC,KAAA,CAAAC,cAAc,I,cAAzBN,mBAAA,CAEM,OALVO,UAAA,GAIML,YAAA,CAAuCM,qBAAA;IAA1BC,OAAK,EAAEC,QAAA,CAAAC;EAAgB,qC,KAJ1CC,mBAAA,gBAMIC,mBAAA,CAAgD;IAAvCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEN,QAAA,CAAAC,gBAAA,IAAAD,QAAA,CAAAC,gBAAA,IAAAK,IAAA,CAAgB;KAAE,OAAK,GACvCC,UAAQ,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}